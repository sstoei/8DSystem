// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _8DSystem.Models;

namespace _8DSystem.Migrations
{
    [DbContext(typeof(CoreContext))]
    [Migration("20220602081453_UpdateRefference")]
    partial class UpdateRefference
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("_8DSystem.Models.D0", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("D0_AffectedCustomerProduct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("D0_Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("D0_CustomerContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("D0_CustomerReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("D0_DeliveryAffected")
                        .HasColumnType("bit");

                    b.Property<bool?>("D0_EmergencyRespondAction")
                        .HasColumnType("bit");

                    b.Property<string>("D0_POItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("D0_PONum")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("D0_PartDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("D0_PartNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("D0_RecurringProblem")
                        .HasColumnType("bit");

                    b.Property<bool?>("D0_RootCauseVerified")
                        .HasColumnType("bit");

                    b.Property<bool?>("D0_SuspectRootCauseIdentified")
                        .HasColumnType("bit");

                    b.Property<string>("D0_WitnessedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReportHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReportHeaderId");

                    b.ToTable("D0");
                });

            modelBuilder.Entity("_8DSystem.Models.D0_Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ContentMimeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("D0Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("D0Id");

                    b.ToTable("D0_Attachment");
                });

            modelBuilder.Entity("_8DSystem.Models.D0_EmergencyRespondAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("D0Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateFinish")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Eff")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Metric")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamMemberEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamMemberId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamMemberName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("D0Id");

                    b.ToTable("D0_EmergencyRespondAction");
                });

            modelBuilder.Entity("_8DSystem.Models.D1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("D1_DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("D1_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("D1_EmployeeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("D1_EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("D1_PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RefFunctionId")
                        .HasColumnType("int");

                    b.Property<Guid>("ReportHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RefFunctionId");

                    b.HasIndex("ReportHeaderId");

                    b.ToTable("D1");
                });

            modelBuilder.Entity("_8DSystem.Models.D2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("D2_AircraftOperators")
                        .HasColumnType("bit");

                    b.Property<string>("D2_AircraftOperatorsDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("D2_Customer")
                        .HasColumnType("bit");

                    b.Property<string>("D2_CustomerDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("D2_CustomerOfCustomer")
                        .HasColumnType("bit");

                    b.Property<string>("D2_CustomerOfCustomerDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("D2_CustomerProblemTypeDefinition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("D2_DefineCustomerExperience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("D2_FailureMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("D2_FailureModeInDPFMEA")
                        .HasColumnType("bit");

                    b.Property<decimal?>("D2_NumberOfPartsAffected")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("D2_NumberOfPartsProducedWithinProblemBoundary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("D2_Organization")
                        .HasColumnType("bit");

                    b.Property<string>("D2_OrganizationDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("D2_Other1")
                        .HasColumnType("bit");

                    b.Property<string>("D2_Other1Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("D2_Other2")
                        .HasColumnType("bit");

                    b.Property<string>("D2_Other2Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("D2_PercenOfPartsAffected")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("D2_ProblemPartEarliestKnownAwarenessDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("D2_ProblemPartEarliestKnownOccurrenceDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("D2_ProblemPartEarliestKnownShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("D2_ProblemSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("D2_RecurringProblem")
                        .HasColumnType("bit");

                    b.Property<string>("D2_RequiredByTheSpecification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("D2_SpareParts")
                        .HasColumnType("bit");

                    b.Property<string>("D2_SparePartsDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("D2_SupSupplier")
                        .HasColumnType("bit");

                    b.Property<string>("D2_SupSupplierDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("D2_TheSpecificationDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReportHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReportHeaderId");

                    b.ToTable("D2");
                });

            modelBuilder.Entity("_8DSystem.Models.D2_Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ContentMimeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("D2Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("D2Id");

                    b.ToTable("D2_Attachment");
                });

            modelBuilder.Entity("_8DSystem.Models.D2_AttachmentFailure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ContentMimeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("D2Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("D2Id");

                    b.ToTable("D2_AttachmentFailure");
                });

            modelBuilder.Entity("_8DSystem.Models.D2_AttachmentRecurring", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ContentMimeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("D2Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("D2Id");

                    b.ToTable("D2_AttachmentRecurring");
                });

            modelBuilder.Entity("_8DSystem.Models.D2_ImageConform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ContentMimeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("D2Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("D2Id");

                    b.ToTable("D2_ImageConform");
                });

            modelBuilder.Entity("_8DSystem.Models.D2_ImageNoneConform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ContentMimeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("D2Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("D2Id");

                    b.ToTable("D2_ImageNoneConform");
                });

            modelBuilder.Entity("_8DSystem.Models.D3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("CopyFromD0")
                        .HasColumnType("bit");

                    b.Property<Guid>("ReportHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReportHeaderId");

                    b.ToTable("D3");
                });

            modelBuilder.Entity("_8DSystem.Models.D3_Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("D3Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("D3_DateFinish")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("D3_DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("D3_Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("D3_Eff")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("D3_Metric")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("D3_PartId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("D3_TeamMember")
                        .HasColumnType("nvarchar(7)")
                        .HasMaxLength(7);

                    b.Property<string>("D3_TeamMemberEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("D3_TeamMemberName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("D3Id");

                    b.ToTable("D3_Action");
                });

            modelBuilder.Entity("_8DSystem.Models.D3_Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ContentMimeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("D3Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("D3Id");

                    b.ToTable("D3_Attachment");
                });

            modelBuilder.Entity("_8DSystem.Models.D4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("D4_CanCausesExplainDifferences")
                        .HasColumnType("bit");

                    b.Property<bool?>("D4_FishBone")
                        .HasColumnType("bit");

                    b.Property<bool?>("D4_FiveWhy")
                        .HasColumnType("bit");

                    b.Property<bool?>("D4_HasEscapePointCausesBeenAddressed")
                        .HasColumnType("bit");

                    b.Property<bool?>("D4_IdentifyCausesInProcessFMEA")
                        .HasColumnType("bit");

                    b.Property<string>("DefineTheProblem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FishBone_Environment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FishBone_Machine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FishBone_Main")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FishBone_Manufacturing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FishBone_Material")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FishBone_Measurement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("How1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("How2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("How3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("How4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReportHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Why1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Why2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Why3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Why4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReportHeaderId");

                    b.ToTable("D4");
                });

            modelBuilder.Entity("_8DSystem.Models.D4_Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ContentMimeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("D4Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("D4Id");

                    b.ToTable("D4_Attachment");
                });

            modelBuilder.Entity("_8DSystem.Models.D4_CauseSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CauseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("D4Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RefCauseSourceId")
                        .HasColumnType("int");

                    b.Property<string>("VerificationMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Verified")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("D4Id");

                    b.HasIndex("RefCauseSourceId");

                    b.ToTable("D4_CauseSource");
                });

            modelBuilder.Entity("_8DSystem.Models.D5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReportHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReportHeaderId");

                    b.ToTable("D5");
                });

            modelBuilder.Entity("_8DSystem.Models.D5_Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("D5Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RefCauseSourceId")
                        .HasColumnType("int");

                    b.Property<string>("VerificationMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Verify")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("D5Id");

                    b.HasIndex("RefCauseSourceId");

                    b.ToTable("D5_Action");
                });

            modelBuilder.Entity("_8DSystem.Models.D5_Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ContentMimeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("D5Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("D5Id");

                    b.ToTable("D5_Attachment");
                });

            modelBuilder.Entity("_8DSystem.Models.D6", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReportHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReportHeaderId");

                    b.ToTable("D6");
                });

            modelBuilder.Entity("_8DSystem.Models.D6_Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("CustomerConcurrence")
                        .HasColumnType("bit");

                    b.Property<int>("D6Id")
                        .HasColumnType("int");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ImplementActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImplementationPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RefPCAStatusId")
                        .HasColumnType("int");

                    b.Property<string>("TeamMemberEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamMemberId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamMemberName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerificationMethod")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("D6Id");

                    b.HasIndex("RefPCAStatusId");

                    b.ToTable("D6_Action");
                });

            modelBuilder.Entity("_8DSystem.Models.D6_Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ContentMimeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("D6Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("D6Id");

                    b.ToTable("D6_Attachment");
                });

            modelBuilder.Entity("_8DSystem.Models.D7", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReportHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReportHeaderId");

                    b.ToTable("D7");
                });

            modelBuilder.Entity("_8DSystem.Models.D7_A", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActualDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("D7Id")
                        .HasColumnType("int");

                    b.Property<string>("PAImplementationPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreventiveAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RefPCAStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TargetDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TeamMemberEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamMemberId")
                        .HasColumnType("nvarchar(7)")
                        .HasMaxLength(7);

                    b.Property<string>("TeamMemberName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("D7Id");

                    b.HasIndex("RefPCAStatusId");

                    b.ToTable("D7_A");
                });

            modelBuilder.Entity("_8DSystem.Models.D7_Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ContentMimeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("D7Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("D7Id");

                    b.ToTable("D7_Attachment");
                });

            modelBuilder.Entity("_8DSystem.Models.D7_B", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("D7Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PlanValidationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Process")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsible")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("D7Id");

                    b.ToTable("D7_B");
                });

            modelBuilder.Entity("_8DSystem.Models.D7_C", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActualDate1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualDate10")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualDate11")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualDate12")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualDate13")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualDate14")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualDate15")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualDate2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualDate3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualDate4")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualDate5")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualDate6")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualDate7")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualDate8")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualDate9")
                        .HasColumnType("datetime2");

                    b.Property<int>("D7Id")
                        .HasColumnType("int");

                    b.Property<string>("NatureOfRevisionNo1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureOfRevisionNo10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureOfRevisionNo11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureOfRevisionNo12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureOfRevisionNo13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureOfRevisionNo14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureOfRevisionNo15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureOfRevisionNo2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureOfRevisionNo3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureOfRevisionNo4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureOfRevisionNo5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureOfRevisionNo6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureOfRevisionNo7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureOfRevisionNo8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureOfRevisionNo9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PlanDate1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlanDate10")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlanDate11")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlanDate12")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlanDate13")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlanDate14")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlanDate15")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlanDate2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlanDate3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlanDate4")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlanDate5")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlanDate6")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlanDate7")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlanDate8")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlanDate9")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resp1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resp10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resp11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resp12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resp13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resp14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resp15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resp2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resp3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resp4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resp5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resp6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resp7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resp8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resp9")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("D7Id");

                    b.ToTable("D7_C");
                });

            modelBuilder.Entity("_8DSystem.Models.D8", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReportHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReportHeaderId");

                    b.ToTable("D8");
                });

            modelBuilder.Entity("_8DSystem.Models.D8_A", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActualDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("D8Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PlanDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("D8Id");

                    b.ToTable("D8_A");
                });

            modelBuilder.Entity("_8DSystem.Models.D8_Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ContentMimeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("D8Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("D8Id");

                    b.ToTable("D8_Attachment");
                });

            modelBuilder.Entity("_8DSystem.Models.D8_B", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("D8Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date2")
                        .HasColumnType("datetime2");

                    b.Property<string>("Signature1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Signature2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("D8Id");

                    b.ToTable("D8_B");
                });

            modelBuilder.Entity("_8DSystem.Models.D8_C", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("D8Id")
                        .HasColumnType("int");

                    b.Property<string>("How")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("When")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Where")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("D8Id");

                    b.ToTable("D8_C");
                });

            modelBuilder.Entity("_8DSystem.Models.RefCauseSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RefCauseSource");
                });

            modelBuilder.Entity("_8DSystem.Models.RefFunction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RefFunction");
                });

            modelBuilder.Entity("_8DSystem.Models.RefPCAStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RefPCAStatus");
                });

            modelBuilder.Entity("_8DSystem.Models.RefStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Behavior")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Step")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RefStatus");
                });

            modelBuilder.Entity("_8DSystem.Models.ReportHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(13)")
                        .HasMaxLength(13);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(7)")
                        .HasMaxLength(7);

                    b.Property<string>("CreateByEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateClosed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateClosureD0")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateClosureD1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateClosureD2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateClosureD3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateClosureD4")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateClosureD5")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateClosureD6")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateClosureD7")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateClosureD8")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateEffectivenessCheck")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOpened")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTargetedClosure")
                        .HasColumnType("datetime2");

                    b.Property<string>("NcrNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkFlowId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkFlowId");

                    b.ToTable("ReportHeader");
                });

            modelBuilder.Entity("_8DSystem.Models.WorkFlow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ApproveId")
                        .HasColumnType("int");

                    b.Property<int>("CancelId")
                        .HasColumnType("int");

                    b.Property<int>("PreviousId")
                        .HasColumnType("int");

                    b.Property<int>("RefStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RefStatusId");

                    b.ToTable("WorkFlow");
                });

            modelBuilder.Entity("_8DSystem.Models.D0", b =>
                {
                    b.HasOne("_8DSystem.Models.ReportHeader", "ReportHeader")
                        .WithMany("D0s")
                        .HasForeignKey("ReportHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.D0_Attachment", b =>
                {
                    b.HasOne("_8DSystem.Models.D0", "D0")
                        .WithMany("D0_Attachments")
                        .HasForeignKey("D0Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.D0_EmergencyRespondAction", b =>
                {
                    b.HasOne("_8DSystem.Models.D0", "D0")
                        .WithMany("D0_EmergencyRespondActions")
                        .HasForeignKey("D0Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.D1", b =>
                {
                    b.HasOne("_8DSystem.Models.RefFunction", "RefFunction")
                        .WithMany()
                        .HasForeignKey("RefFunctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_8DSystem.Models.ReportHeader", "ReportHeader")
                        .WithMany("D1s")
                        .HasForeignKey("ReportHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.D2", b =>
                {
                    b.HasOne("_8DSystem.Models.ReportHeader", "ReportHeader")
                        .WithMany("D2s")
                        .HasForeignKey("ReportHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.D2_Attachment", b =>
                {
                    b.HasOne("_8DSystem.Models.D2", "D2")
                        .WithMany("D2_Attachments")
                        .HasForeignKey("D2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.D2_AttachmentFailure", b =>
                {
                    b.HasOne("_8DSystem.Models.D2", "D2")
                        .WithMany("D2_AttachmentFailures")
                        .HasForeignKey("D2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.D2_AttachmentRecurring", b =>
                {
                    b.HasOne("_8DSystem.Models.D2", "D2")
                        .WithMany("D2_AttachmentRecurrings")
                        .HasForeignKey("D2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.D2_ImageConform", b =>
                {
                    b.HasOne("_8DSystem.Models.D2", "D2")
                        .WithMany("D2_ImageConforms")
                        .HasForeignKey("D2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.D2_ImageNoneConform", b =>
                {
                    b.HasOne("_8DSystem.Models.D2", "D2")
                        .WithMany("D2_ImageNoneConforms")
                        .HasForeignKey("D2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.D3", b =>
                {
                    b.HasOne("_8DSystem.Models.ReportHeader", "ReportHeader")
                        .WithMany("D3s")
                        .HasForeignKey("ReportHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.D3_Action", b =>
                {
                    b.HasOne("_8DSystem.Models.D3", "D3")
                        .WithMany("D3_Actions")
                        .HasForeignKey("D3Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.D3_Attachment", b =>
                {
                    b.HasOne("_8DSystem.Models.D3", "D3")
                        .WithMany("D3_Attachments")
                        .HasForeignKey("D3Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.D4", b =>
                {
                    b.HasOne("_8DSystem.Models.ReportHeader", "ReportHeader")
                        .WithMany("D4s")
                        .HasForeignKey("ReportHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.D4_Attachment", b =>
                {
                    b.HasOne("_8DSystem.Models.D4", "D4")
                        .WithMany("D4_Attachments")
                        .HasForeignKey("D4Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.D4_CauseSource", b =>
                {
                    b.HasOne("_8DSystem.Models.D4", "D4")
                        .WithMany("D4_CauseSources")
                        .HasForeignKey("D4Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_8DSystem.Models.RefCauseSource", "RefCauseSource")
                        .WithMany()
                        .HasForeignKey("RefCauseSourceId");
                });

            modelBuilder.Entity("_8DSystem.Models.D5", b =>
                {
                    b.HasOne("_8DSystem.Models.ReportHeader", "ReportHeader")
                        .WithMany("D5s")
                        .HasForeignKey("ReportHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.D5_Action", b =>
                {
                    b.HasOne("_8DSystem.Models.D5", "D5")
                        .WithMany("D5_Actions")
                        .HasForeignKey("D5Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_8DSystem.Models.RefCauseSource", "RefCauseSource")
                        .WithMany()
                        .HasForeignKey("RefCauseSourceId");
                });

            modelBuilder.Entity("_8DSystem.Models.D5_Attachment", b =>
                {
                    b.HasOne("_8DSystem.Models.D5", "D5")
                        .WithMany("D5_Attachments")
                        .HasForeignKey("D5Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.D6", b =>
                {
                    b.HasOne("_8DSystem.Models.ReportHeader", "ReportHeader")
                        .WithMany("D6s")
                        .HasForeignKey("ReportHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.D6_Action", b =>
                {
                    b.HasOne("_8DSystem.Models.D6", "D6")
                        .WithMany("D6_Actions")
                        .HasForeignKey("D6Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_8DSystem.Models.RefPCAStatus", "RefPCAStatus")
                        .WithMany()
                        .HasForeignKey("RefPCAStatusId");
                });

            modelBuilder.Entity("_8DSystem.Models.D6_Attachment", b =>
                {
                    b.HasOne("_8DSystem.Models.D6", "D6")
                        .WithMany("D6_Attachments")
                        .HasForeignKey("D6Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.D7", b =>
                {
                    b.HasOne("_8DSystem.Models.ReportHeader", "ReportHeader")
                        .WithMany("D7s")
                        .HasForeignKey("ReportHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.D7_A", b =>
                {
                    b.HasOne("_8DSystem.Models.D7", "D7")
                        .WithMany("D7_As")
                        .HasForeignKey("D7Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_8DSystem.Models.RefPCAStatus", "RefPCAStatus")
                        .WithMany()
                        .HasForeignKey("RefPCAStatusId");
                });

            modelBuilder.Entity("_8DSystem.Models.D7_Attachment", b =>
                {
                    b.HasOne("_8DSystem.Models.D7", "D7")
                        .WithMany("D7_Attachments")
                        .HasForeignKey("D7Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.D7_B", b =>
                {
                    b.HasOne("_8DSystem.Models.D7", "D7")
                        .WithMany("D7_Bs")
                        .HasForeignKey("D7Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.D7_C", b =>
                {
                    b.HasOne("_8DSystem.Models.D7", "D7")
                        .WithMany("D7_Cs")
                        .HasForeignKey("D7Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.D8", b =>
                {
                    b.HasOne("_8DSystem.Models.ReportHeader", "ReportHeader")
                        .WithMany("D8s")
                        .HasForeignKey("ReportHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.D8_A", b =>
                {
                    b.HasOne("_8DSystem.Models.D8", "D8")
                        .WithMany("D8_As")
                        .HasForeignKey("D8Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.D8_Attachment", b =>
                {
                    b.HasOne("_8DSystem.Models.D8", "D8")
                        .WithMany("D8_Attachments")
                        .HasForeignKey("D8Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.D8_B", b =>
                {
                    b.HasOne("_8DSystem.Models.D8", "D8")
                        .WithMany("D8_Bs")
                        .HasForeignKey("D8Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.D8_C", b =>
                {
                    b.HasOne("_8DSystem.Models.D8", "D8")
                        .WithMany("D8_Cs")
                        .HasForeignKey("D8Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.ReportHeader", b =>
                {
                    b.HasOne("_8DSystem.Models.WorkFlow", "WorkFlow")
                        .WithMany()
                        .HasForeignKey("WorkFlowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_8DSystem.Models.WorkFlow", b =>
                {
                    b.HasOne("_8DSystem.Models.RefStatus", "RefStatus")
                        .WithMany("WorkFlow")
                        .HasForeignKey("RefStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
